name: CI/CD

on:
    push:
        branches: ['main', 'test']

jobs:
    build-and-push-to-docker-hub:
        name: 'Build and Push Image to Docker Hub'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}

            - name: Build Image and Push to Docker Hub
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: ${{secrets.DOCKERHUB_USERNAME}}/connectify-server:latest
                  build-args: |
                    NODE_ENV=${{secrets.NODE_ENV}}
                    PORT=${{secrets.PORT}}
                    DATABASE_URI=${{secrets.DATABASE_URI}}
                    CLOUDINARY_URL=${{secrets.CLOUDINARY_URL}}
                    CLOUDINARY_CLOUD_NAME=${{secrets.CLOUDINARY_CLOUD_NAME}}
                    CLOUDINARY_CLOUD_API_KEY=${{secrets.CLOUDINARY_CLOUD_API_KEY}}
                    CLOUDINARY_CLOUD_API_SECRET=${{secrets.CLOUDINARY_CLOUD_API_SECRET}}
                    CLOUDINARY_PROFILE_PUBLIC_ID=${{secrets.CLOUDINARY_PROFILE_PUBLIC_ID}}
                    DEFAULT_AVATAR_NAME=${{secrets.DEFAULT_AVATAR_NAME}}
                  secrets: |
                      GIT_AUTH_TOKEN=${{secrets.GIT_AUTH_TOKEN}}

    deploy-to-linode:
        name: 'Connect to Linode through SSH and deploy the fresh image'
        runs-on: ubuntu-latest
        needs: build-and-push-to-docker-hub

        steps:
            - name: 'Connect to VPC'
              uses: appleboy/ssh-action@master
              with:
                  host: ${{secrets.SSH_HOST}}
                  port: ${{secrets.SSH_PORT}}
                  username: ${{secrets.SSH_USERNAME}}
                  password: ${{secrets.SSH_PASSWORD}}
                  passphrase: ${{secrets.SSH_PASSPHRASE}}
                  script: bash deploy.sh
